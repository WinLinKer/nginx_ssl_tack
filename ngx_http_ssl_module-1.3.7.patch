diff -Naur nginx-1.3.7/src/http/modules/ngx_http_ssl_module.c nginx-1.3.7-tack/src/http/modules/ngx_http_ssl_module.c
--- nginx-1.3.7/src/http/modules/ngx_http_ssl_module.c	2012-10-01 16:53:11.000000000 +0400
+++ nginx-1.3.7-tack/src/http/modules/ngx_http_ssl_module.c	2012-10-09 17:27:56.204194173 +0400
@@ -189,6 +189,31 @@
       offsetof(ngx_http_ssl_srv_conf_t, stapling_verify),
       NULL },
 
+#ifndef OPENSSL_NO_TACK
+
+    { ngx_string("ssl_tack"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_flag_slot,
+      NGX_HTTP_SRV_CONF_OFFSET,
+      offsetof(ngx_http_ssl_srv_conf_t, tack),
+      NULL },
+
+    { ngx_string("ssl_tack_file"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_str_slot,
+      NGX_HTTP_SRV_CONF_OFFSET,
+      offsetof(ngx_http_ssl_srv_conf_t, tack_file),
+      NULL },
+
+    { ngx_string("ssl_tack_pin_activation"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_FLAG,
+      ngx_conf_set_flag_slot,
+      NGX_HTTP_SRV_CONF_OFFSET,
+      offsetof(ngx_http_ssl_srv_conf_t, tack_pin_activation),
+      NULL },
+
+#endif
+
       ngx_null_command
 };
 
@@ -379,6 +404,11 @@
     sscf->stapling = NGX_CONF_UNSET;
     sscf->stapling_verify = NGX_CONF_UNSET;
 
+#ifndef OPENSSL_NO_TACK
+    sscf->tack = NGX_CONF_UNSET;
+    sscf->tack_pin_activation = NGX_CONF_UNSET;
+#endif
+
     return sscf;
 }
 
@@ -437,6 +467,12 @@
     ngx_conf_merge_str_value(conf->stapling_responder,
                          prev->stapling_responder, "");
 
+#ifndef OPENSSL_NO_TACK
+    ngx_conf_merge_value(conf->tack, prev->tack, 0);
+    ngx_conf_merge_str_value(conf->tack_file, prev->tack_file, "");
+    ngx_conf_merge_value(conf->tack_pin_activation, prev->tack_pin_activation, 0);
+#endif
+
     conf->ssl.log = cf->log;
 
     if (conf->enable) {
@@ -583,6 +619,26 @@
 
     }
 
+#ifndef OPENSSL_NO_TACK
+
+    if (conf->tack && conf->tack_file.len) {
+        if (ngx_conf_full_name(cf->cycle, &conf->tack_file, 1) != NGX_OK) {
+            return NGX_CONF_ERROR;
+        }
+        if (SSL_CTX_use_tack_file(conf->ssl.ctx,
+                                    (const char *) conf->tack_file.data,
+                                    conf->tack_pin_activation)
+            == 0)
+        {
+            ngx_ssl_error(NGX_LOG_EMERG, cf->log, 0,
+                            "Unable to initialize TLS TACK extension "
+                            "(incompatible OpenSSL version?)");
+            return NGX_CONF_ERROR;
+        }
+    }
+
+#endif
+
     return NGX_CONF_OK;
 }
 
diff -Naur nginx-1.3.7/src/http/modules/ngx_http_ssl_module.h nginx-1.3.7-tack/src/http/modules/ngx_http_ssl_module.h
--- nginx-1.3.7/src/http/modules/ngx_http_ssl_module.h	2012-10-01 16:53:11.000000000 +0400
+++ nginx-1.3.7-tack/src/http/modules/ngx_http_ssl_module.h	2012-10-09 17:28:01.544126211 +0400
@@ -47,6 +47,12 @@
     ngx_str_t                       stapling_file;
     ngx_str_t                       stapling_responder;
 
+#ifndef OPENSSL_NO_TACK
+    ngx_flag_t                      tack;
+    ngx_str_t                       tack_file;
+    ngx_flag_t                      tack_pin_activation;
+#endif
+
     u_char                         *file;
     ngx_uint_t                      line;
 } ngx_http_ssl_srv_conf_t;
