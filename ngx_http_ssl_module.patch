diff -crB nginx-1.3.6/src/http/modules/ngx_http_ssl_module.c nginx-1.3.6-tack/src/http/modules/ngx_http_ssl_module.c
*** nginx-1.3.6/src/http/modules/ngx_http_ssl_module.c	2012-01-18 19:07:43.000000000 +0400
--- nginx-1.3.6-tack/src/http/modules/ngx_http_ssl_module.c	2012-09-22 23:36:32.274193468 +0400
***************
*** 152,157 ****
--- 152,189 ----
        offsetof(ngx_http_ssl_srv_conf_t, crl),
        NULL },
  
+ #ifndef OPENSSL_NO_TACK
+ 
+     { ngx_string("ssl_tack"),
+       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_TAKE1,
+       ngx_conf_set_flag_slot,
+       NGX_HTTP_SRV_CONF_OFFSET,
+       offsetof(ngx_http_ssl_srv_conf_t, tack),
+       NULL },
+ 
+     { ngx_string("ssl_tack_file"),
+       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_TAKE1,
+       ngx_conf_set_str_slot,
+       NGX_HTTP_SRV_CONF_OFFSET,
+       offsetof(ngx_http_ssl_srv_conf_t, tack_file),
+       NULL },
+ 
+     { ngx_string("ssl_tack_breaksigs_file"),
+       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_TAKE1,
+       ngx_conf_set_str_slot,
+       NGX_HTTP_SRV_CONF_OFFSET,
+       offsetof(ngx_http_ssl_srv_conf_t, tack_breaksigs_file),
+       NULL },
+ 
+     { ngx_string("ssl_tack_pin_activation"),
+       NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_CONF_FLAG,
+       ngx_conf_set_flag_slot,
+       NGX_HTTP_SRV_CONF_OFFSET,
+       offsetof(ngx_http_ssl_srv_conf_t, tack_pin_activation),
+       NULL },
+ 
+ #endif
+ 
        ngx_null_command
  };
  
***************
*** 337,342 ****
--- 369,379 ----
      sscf->builtin_session_cache = NGX_CONF_UNSET;
      sscf->session_timeout = NGX_CONF_UNSET;
  
+ #ifndef OPENSSL_NO_TACK
+     sscf->tack = NGX_CONF_UNSET;
+     sscf->tack_pin_activation = NGX_CONF_UNSET;
+ #endif
+ 
      return sscf;
  }
  
***************
*** 387,392 ****
--- 424,435 ----
  
      ngx_conf_merge_str_value(conf->ciphers, prev->ciphers, NGX_DEFAULT_CIPHERS);
  
+ #ifndef OPENSSL_NO_TACK
+     ngx_conf_merge_value(conf->tack, prev->tack, 0);
+     ngx_conf_merge_str_value(conf->tack_file, prev->tack_file, "");
+     ngx_conf_merge_str_value(conf->tack_breaksigs_file, prev->tack_breaksigs_file, "");
+     ngx_conf_merge_value(conf->tack_pin_activation, prev->tack_pin_activation, 0);
+ #endif
  
      conf->ssl.log = cf->log;
  
***************
*** 515,520 ****
--- 558,589 ----
          return NGX_CONF_ERROR;
      }
  
+ #ifndef OPENSSL_NO_TACK
+ 
+     if (conf->tack && conf->tack_file.len) {
+         if (ngx_conf_full_name(cf->cycle, &conf->tack_file, 1) != NGX_OK) {
+             return NGX_CONF_ERROR;
+         }
+         if (conf->tack_breaksigs_file.len) {
+             if (ngx_conf_full_name(cf->cycle, &conf->tack_breaksigs_file, 1) != NGX_OK) {
+                 return NGX_CONF_ERROR;
+             }
+         }
+         if (SSL_CTX_use_tack_files(conf->ssl.ctx,
+                                     (const char *) conf->tack_file.data,
+                                     (conf->tack_breaksigs_file.len ? (const char *) conf->tack_breaksigs_file.data : NULL),
+                                     conf->tack_pin_activation)
+             == 0)
+         {
+             ngx_log_error(NGX_LOG_EMERG, cf->log, 0,
+                             "Unable to initialize TLS TACK extension "
+                             "(incompatible OpenSSL version?)");
+             return NGX_CONF_ERROR;
+         }
+     }
+ 
+ #endif
+ 
      return NGX_CONF_OK;
  }
  
diff -crB nginx-1.3.6/src/http/modules/ngx_http_ssl_module.h nginx-1.3.6-tack/src/http/modules/ngx_http_ssl_module.h
*** nginx-1.3.6/src/http/modules/ngx_http_ssl_module.h	2012-01-18 19:07:43.000000000 +0400
--- nginx-1.3.6-tack/src/http/modules/ngx_http_ssl_module.h	2012-09-22 23:34:46.755519839 +0400
***************
*** 37,42 ****
--- 37,49 ----
      ngx_str_t                       client_certificate;
      ngx_str_t                       crl;
  
+ #ifndef OPENSSL_NO_TACK
+     ngx_flag_t                      tack;
+     ngx_str_t                       tack_file;
+     ngx_str_t                       tack_breaksigs_file;
+     ngx_flag_t                      tack_pin_activation;
+ #endif
+ 
      ngx_str_t                       ciphers;
  
      ngx_shm_zone_t                 *shm_zone;
